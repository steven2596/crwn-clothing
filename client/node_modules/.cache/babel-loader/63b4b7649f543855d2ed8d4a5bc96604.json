{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { UserActionTypes } from './user.types';\nimport { signInSuccess, signInFailure } from './user.actions';\nexport function* createCurrentUser(user) {\n  const userRef = yield call(createUserProfileDocument, user);\n  const snapshot = yield userRef.get();\n  yield put(signInSuccess({\n    id: snapshot.id,\n    ...snapshot.data()\n  }));\n}\n;\nexport function* googleSignInAsync() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield call(createCurrentUser, user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* emailSignInAsync({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield call(createCurrentUser, user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, googleSignInAsync);\n}\n;\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, emailSignInAsync);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}\n;","map":{"version":3,"sources":["D:/Bootcamp/NodeJS/react-course/crown-clothing/crwn-clothing/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","auth","googleProvider","createUserProfileDocument","UserActionTypes","signInSuccess","signInFailure","createCurrentUser","user","userRef","snapshot","get","id","data","googleSignInAsync","signInWithPopup","error","emailSignInAsync","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AAEA,SAASC,eAAT,QAAgC,cAAhC;AAEA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,gBAA7C;AAEA,OAAO,UAAUC,iBAAV,CAA4BC,IAA5B,EAAkC;AACrC,QAAMC,OAAO,GAAG,MAAMT,IAAI,CAACG,yBAAD,EAA4BK,IAA5B,CAA1B;AACA,QAAME,QAAQ,GAAG,MAAMD,OAAO,CAACE,GAAR,EAAvB;AAEA,QAAMb,GAAG,CAACO,aAAa,CAAC;AAAEO,IAAAA,EAAE,EAAEF,QAAQ,CAACE,EAAf;AAAmB,OAAGF,QAAQ,CAACG,IAAT;AAAtB,GAAD,CAAd,CAAT;AACH;AAAA;AAED,OAAO,UAAUC,iBAAV,GAA8B;AACjC,MAAI;AACA,UAAM;AAAEN,MAAAA;AAAF,QAAW,MAAMP,IAAI,CAACc,eAAL,CAAqBb,cAArB,CAAvB;AAEA,UAAMF,IAAI,CAACO,iBAAD,EAAoBC,IAApB,CAAV;AAEH,GALD,CAKE,OAAOQ,KAAP,EAAc;AACZ,UAAMlB,GAAG,CAACQ,aAAa,CAACU,KAAD,CAAd,CAAT;AACH;AACJ;AAAA;AAED,OAAO,UAAUC,gBAAV,CAA2B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA3B,EAA6D;AAChE,MAAI;AACA,UAAM;AAAEZ,MAAAA;AAAF,QAAW,MAAMP,IAAI,CAACoB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AAEA,UAAMpB,IAAI,CAACO,iBAAD,EAAoBC,IAApB,CAAV;AAEH,GALD,CAKE,OAAOQ,KAAP,EAAc;AACZ,UAAMlB,GAAG,CAACQ,aAAa,CAACU,KAAD,CAAd,CAAT;AACH;AACJ;AAAA;AAED,OAAO,UAAUM,mBAAV,GAAgC;AACnC,QAAMzB,UAAU,CAACO,eAAe,CAACmB,oBAAjB,EACZT,iBADY,CAAhB;AAGH;AAAA;AAED,OAAO,UAAUU,kBAAV,GAA+B;AAClC,QAAM3B,UAAU,CAACO,eAAe,CAACqB,mBAAjB,EACZR,gBADY,CAAhB;AAGH;AAED,OAAO,UAAUS,SAAV,GAAsB;AACzB,QAAM3B,GAAG,CAAC,CAACC,IAAI,CAACsB,mBAAD,CAAL,EAA4BtB,IAAI,CAACwB,kBAAD,CAAhC,CAAD,CAAT;AACH;AAAA","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\n\r\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\r\n\r\nimport { UserActionTypes } from './user.types';\r\n\r\nimport { signInSuccess, signInFailure } from './user.actions';\r\n\r\nexport function* createCurrentUser(user) {\r\n    const userRef = yield call(createUserProfileDocument, user);\r\n    const snapshot = yield userRef.get();\r\n\r\n    yield put(signInSuccess({ id: snapshot.id, ...snapshot.data() }));\r\n};\r\n\r\nexport function* googleSignInAsync() {\r\n    try {\r\n        const { user } = yield auth.signInWithPopup(googleProvider);\r\n\r\n        yield call(createCurrentUser, user)\r\n\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n};\r\n\r\nexport function* emailSignInAsync({ payload: { email, password } }) {\r\n    try {\r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n\r\n        yield call(createCurrentUser, user);\r\n\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n};\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,\r\n        googleSignInAsync\r\n    )\r\n};\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,\r\n        emailSignInAsync\r\n    )\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart)])\r\n};"]},"metadata":{},"sourceType":"module"}