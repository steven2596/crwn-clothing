{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Bootcamp\\\\NodeJS\\\\react-course\\\\crown-clothing\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport './shop.style.scss';\nimport WithSpinner from '../../components/withspinner/with-spinner.component';\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\nimport { selectCollectionsStatus } from '../../redux/shop/shop.selectors';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\n_c = CollectionOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass Shop extends React.Component {\n  // render() will run before componentDidMount()\n  componentDidMount() {\n    const {\n      fetchCollectionsStart\n    } = this.props;\n    fetchCollectionsStart();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionsLoaded\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionOverviewWithSpinner, {\n          isLoading: !isCollectionsLoaded,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: !isCollectionsLoaded,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n} // If isCollectionsLoaded = true, we want isLoading to be false so that it returns wrapped component\n// If isCollectionsLoaded = false, we want isLoading to be true so that it returns loading screen\n\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoaded: selectCollectionsStatus\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Shop); // The purpose of props in <Route render={ (props) => <component/> } />\n//-so that the component can use those props such as match, history, location.\n// collectionMap = {\n//     hats: {\n//         id: ,\n//         items: ,\n//         routeName: ,\n//         title:\n//     },\n//     ...\n// }\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["D:/Bootcamp/NodeJS/react-course/crown-clothing/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","createStructuredSelector","WithSpinner","CollectionOverview","CollectionPage","fetchCollectionsStart","selectCollectionsStatus","CollectionOverviewWithSpinner","CollectionPageWithSpinner","Shop","Component","componentDidMount","props","render","match","isCollectionsLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAO,mBAAP;AAEA,OAAOC,WAAP,MAAwB,qDAAxB;AACA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAGA,SAASC,qBAAT,QAAsC,+BAAtC;AACA,SAASC,uBAAT,QAAwC,iCAAxC;AAGA,MAAMC,6BAA6B,GAAGL,WAAW,CAACC,kBAAD,CAAjD;KAAMI,6B;AACN,MAAMC,yBAAyB,GAAGN,WAAW,CAACE,cAAD,CAA7C;MAAMI,yB;;AAEN,MAAMC,IAAN,SAAmBX,KAAK,CAACY,SAAzB,CAAmC;AAC/B;AACAC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEN,MAAAA;AAAF,QAA4B,KAAKO,KAAvC;AAEAP,IAAAA,qBAAqB;AACxB;;AAEDQ,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAiC,KAAKH,KAA5C;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AACI,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EADxB;AAEI,QAAA,MAAM,EAAGJ,KAAD,iBAAW,QAAC,6BAAD;AAA+B,UAAA,SAAS,EAAE,CAACG,mBAA3C;AAAA,aAAoEH;AAApE;AAAA;AAAA;AAAA;AAAA;AAFvB;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,KAAD;AACI,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,gBADxB;AAEI,QAAA,MAAM,EAAGJ,KAAD,iBAAW,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAE,CAACG,mBAAvC;AAAA,aAAgEH;AAAhE;AAAA;AAAA;AAAA;AAAA;AAFvB;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AAxB8B,C,CA2BnC;AACA;;;AACA,MAAMK,eAAe,GAAGhB,wBAAwB,CAAC;AAC7Cc,EAAAA,mBAAmB,EAAET;AADwB,CAAD,CAAhD;;AAIA,MAAMY,kBAAkB,GAAIC,QAAD,KAAe;AACtCd,EAAAA,qBAAqB,EAAE,MAAMc,QAAQ,CAACd,qBAAqB,EAAtB;AADC,CAAf,CAA3B;;AAIA,eAAeL,OAAO,CAACiB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,IAA7C,CAAf,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\r\n\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport './shop.style.scss';\r\n\r\nimport WithSpinner from '../../components/withspinner/with-spinner.component';\r\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\r\nimport CollectionPage from '../collection/collection.component';\r\n\r\n\r\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\r\nimport { selectCollectionsStatus } from '../../redux/shop/shop.selectors';\r\n\r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass Shop extends React.Component {\r\n    // render() will run before componentDidMount()\r\n    componentDidMount() {\r\n        const { fetchCollectionsStart } = this.props;\r\n\r\n        fetchCollectionsStart();\r\n    }\r\n\r\n    render() {\r\n        const { match, isCollectionsLoaded } = this.props;\r\n\r\n        return (\r\n            <div className='shop-page' >\r\n                <Route exact\r\n                    path={`${match.path}`}\r\n                    render={(props) => <CollectionOverviewWithSpinner isLoading={!isCollectionsLoaded} {...props} />}\r\n                />\r\n                <Route\r\n                    path={`${match.path}/:collectionId`}\r\n                    render={(props) => <CollectionPageWithSpinner isLoading={!isCollectionsLoaded} {...props} />}\r\n                />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// If isCollectionsLoaded = true, we want isLoading to be false so that it returns wrapped component\r\n// If isCollectionsLoaded = false, we want isLoading to be true so that it returns loading screen\r\nconst mapStateToProps = createStructuredSelector({\r\n    isCollectionsLoaded: selectCollectionsStatus\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Shop);\r\n\r\n// The purpose of props in <Route render={ (props) => <component/> } />\r\n//-so that the component can use those props such as match, history, location.\r\n\r\n// collectionMap = {\r\n//     hats: {\r\n//         id: ,\r\n//         items: ,\r\n//         routeName: ,\r\n//         title:\r\n//     },\r\n//     ...\r\n// }"]},"metadata":{},"sourceType":"module"}