{"ast":null,"code":"//Purpose of addItemToCart:\n//1. if added item is new, it will give quantity property to new item\n//2. if added item already exists, it will add 1 to quantity \nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n}; //Purpose of removeItemFromCart:\n//1. if cartItemToRemove.quantity is 1, we want to remove that item from our cart\n//2. if cartItemToRemove.quantity is greater than 1, we want to decrease the quantity by 1\n\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const existingItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\n\n  if (existingItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== existingItem.id);\n  }\n\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? { ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};","map":{"version":3,"sources":["D:/Bootcamp/NodeJS/react-course/crown-clothing/crwn-clothing/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity","removeItemFromCart","cartItemToRemove","existingItem","filter"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACvD,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACrBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADrB,CAAzB;;AAIA,MAAIH,gBAAJ,EAAsB;AAClB,WAAOF,SAAS,CAACM,GAAV,CAAcF,QAAQ,IACzBA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,GACM,EAAE,GAAGD,QAAL;AAAeG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,KADN,GAEMH,QAHH,CAAP;AAKH;;AAED,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAE,GAAGC,aAAL;AAAoBM,IAAAA,QAAQ,EAAE;AAA9B,GAAf,CAAP;AACH,CAdM,C,CAgBP;AACA;AACA;;AACA,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYS,gBAAZ,KAAiC;AAC/D,QAAMC,YAAY,GAAGV,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAA5D,CAArB;;AAEA,MAAIK,YAAY,CAACH,QAAb,KAA0B,CAA9B,EAAiC;AAC7B,WAAOP,SAAS,CAACW,MAAV,CAAiBP,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBK,YAAY,CAACL,EAA1D,CAAP;AACH;;AAED,SAAOL,SAAS,CAACM,GAAV,CAAcF,QAAQ,IACzBA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAAjC,GACI,EAAE,GAAGD,QAAL;AAAeG,IAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,GADJ,GACuDH,QAFpD,CAAP;AAIH,CAXM","sourcesContent":["//Purpose of addItemToCart:\r\n//1. if added item is new, it will give quantity property to new item\r\n//2. if added item already exists, it will add 1 to quantity \r\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\r\n    const existingCartItem = cartItems.find(\r\n        cartItem => cartItem.id === cartItemToAdd.id\r\n    );\r\n\r\n    if (existingCartItem) {\r\n        return cartItems.map(cartItem =>\r\n            cartItem.id === cartItemToAdd.id\r\n                ? { ...cartItem, quantity: cartItem.quantity + 1 }\r\n                : cartItem\r\n        );\r\n    }\r\n\r\n    return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\r\n};\r\n\r\n//Purpose of removeItemFromCart:\r\n//1. if cartItemToRemove.quantity is 1, we want to remove that item from our cart\r\n//2. if cartItemToRemove.quantity is greater than 1, we want to decrease the quantity by 1\r\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\r\n    const existingItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\r\n\r\n    if (existingItem.quantity === 1) {\r\n        return cartItems.filter(cartItem => cartItem.id !== existingItem.id);\r\n    }\r\n\r\n    return cartItems.map(cartItem =>\r\n        cartItem.id === cartItemToRemove.id ?\r\n            { ...cartItem, quantity: cartItem.quantity - 1 } : cartItem\r\n    );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}