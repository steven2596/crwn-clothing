{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Bootcamp\\\\NodeJS\\\\react-course\\\\crown-clothing\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './shop.style.scss';\nimport WithSpinner from '../../components/withspinner/with-spinner.component';\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollection } from '../../redux/shop/shop.actions';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\n_c = CollectionOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass Shop extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollection\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\n      updateCollection(collectionMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionOverviewWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollection: collectionMap => dispatch(updateCollection(collectionMap))\n});\n\nexport default connect(null, mapDispatchToProps)(Shop); // The purpose of props in <Route render={ (props) => <component/> } />\n//-so that the component can use those props such as match, history, location.\n// collectionMap = {\n//     hats: {\n//         id: ,\n//         items: ,\n//         routeName: ,\n//         title:\n//     },\n//     ...\n// }\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["D:/Bootcamp/NodeJS/react-course/crown-clothing/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","WithSpinner","CollectionOverview","CollectionPage","firestore","convertCollectionSnapshotToMap","updateCollection","CollectionOverviewWithSpinner","CollectionPageWithSpinner","Shop","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,mBAAP;AAEA,OAAOC,WAAP,MAAwB,qDAAxB;AACA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,+BAA1D;AAEA,SAASC,gBAAT,QAAiC,+BAAjC;AAEA,MAAMC,6BAA6B,GAAGN,WAAW,CAACC,kBAAD,CAAjD;KAAMK,6B;AACN,MAAMC,yBAAyB,GAAGP,WAAW,CAACE,cAAD,CAA7C;MAAMK,yB;;AAEN,MAAMC,IAAN,SAAmBX,KAAK,CAACY,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AACJC,MAAAA,OAAO,EAAE;AADL,KADuB;AAAA,SAK/BC,uBAL+B,GAKL,IALK;AAAA;;AAO/BC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAER,MAAAA;AAAF,QAAuB,KAAKS,KAAlC;AACA,UAAMC,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAOC,QAAP,IAAoB;AACzC,YAAMC,aAAa,GAAGf,8BAA8B,CAACc,QAAD,CAApD;AACAb,MAAAA,gBAAgB,CAACc,aAAD,CAAhB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAJD;AAKH;;AAEDU,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AACI,QAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK,EADxB;AAEI,QAAA,MAAM,EAAGT,KAAD,iBAAW,QAAC,6BAAD;AAA+B,UAAA,SAAS,EAAEH,OAA1C;AAAA,aAAuDG;AAAvD;AAAA;AAAA;AAAA;AAAA;AAFvB;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,KAAD;AACI,QAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,gBADxB;AAEI,QAAA,MAAM,EAAGT,KAAD,iBAAW,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEH,OAAtC;AAAA,aAAmDG;AAAnD;AAAA;AAAA;AAAA;AAAA;AAFvB;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AAlC8B;;AAqCnC,MAAMU,kBAAkB,GAAIC,QAAD,KAAe;AACtCpB,EAAAA,gBAAgB,EAAEc,aAAa,IAAIM,QAAQ,CAACpB,gBAAgB,CAACc,aAAD,CAAjB;AADL,CAAf,CAA3B;;AAIA,eAAepB,OAAO,CAAC,IAAD,EAAOyB,kBAAP,CAAP,CAAkChB,IAAlC,CAAf,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\r\n\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './shop.style.scss';\r\n\r\nimport WithSpinner from '../../components/withspinner/with-spinner.component';\r\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\r\nimport CollectionPage from '../collection/collection.component';\r\n\r\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nimport { updateCollection } from '../../redux/shop/shop.actions';\r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass Shop extends React.Component {\r\n    state = {\r\n        loading: true\r\n    };\r\n\r\n    unsubscribeFromSnapshot = null;\r\n\r\n    componentDidMount() {\r\n        const { updateCollection } = this.props;\r\n        const collectionRef = firestore.collection('collections');\r\n\r\n        collectionRef.onSnapshot(async (snapshot) => {\r\n            const collectionMap = convertCollectionSnapshotToMap(snapshot);\r\n            updateCollection(collectionMap);\r\n            this.setState({ loading: false });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { match } = this.props;\r\n        const { loading } = this.state;\r\n        return (\r\n            <div className='shop-page' >\r\n                <Route exact\r\n                    path={`${match.path}`}\r\n                    render={(props) => <CollectionOverviewWithSpinner isLoading={loading} {...props} />}\r\n                />\r\n                <Route\r\n                    path={`${match.path}/:collectionId`}\r\n                    render={(props) => <CollectionPageWithSpinner isLoading={loading} {...props} />}\r\n                />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    updateCollection: collectionMap => dispatch(updateCollection(collectionMap))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Shop);\r\n\r\n// The purpose of props in <Route render={ (props) => <component/> } />\r\n//-so that the component can use those props such as match, history, location.\r\n\r\n// collectionMap = {\r\n//     hats: {\r\n//         id: ,\r\n//         items: ,\r\n//         routeName: ,\r\n//         title:\r\n//     },\r\n//     ...\r\n// }"]},"metadata":{},"sourceType":"module"}