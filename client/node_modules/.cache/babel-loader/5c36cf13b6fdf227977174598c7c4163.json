{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Bootcamp\\\\NodeJS\\\\react-course\\\\crown-clothing\\\\crwn-clothing\\\\src\\\\components\\\\withspinner\\\\with-spinner.component.jsx\";\nimport React from 'react';\nimport { SpinnerOverlay, SpinnerContainer } from './with-spinner.style';\n\nconst WithSpinner = WrappedComponent => {\n  const Spinner = ({\n    isLoading,\n    ...otherProps\n  }) => {\n    return isLoading ? /*#__PURE__*/_jsxDEV(SpinnerOverlay, {\n      children: /*#__PURE__*/_jsxDEV(SpinnerContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(WrappedComponent, { ...otherProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this); //It's important to put {...otherProps} inside <WrappedComponent/>\n    //For Eg. CollectionPage component needs to use match.params so it needs otherProps\n  };\n\n  return Spinner;\n};\n\n_c = WithSpinner;\nexport default WithSpinner; //Purpose of WithSpinner HOC\n//-It takes a component as a parameter\n//1. If isLoading is TRUE, it will return spinner component which is loading screen\n//2. If isLoading is FALSE, it will return the component which this HOC took as its parameter\n\nvar _c;\n\n$RefreshReg$(_c, \"WithSpinner\");","map":{"version":3,"sources":["D:/Bootcamp/NodeJS/react-course/crown-clothing/crwn-clothing/src/components/withspinner/with-spinner.component.jsx"],"names":["React","SpinnerOverlay","SpinnerContainer","WithSpinner","WrappedComponent","Spinner","isLoading","otherProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,sBAAjD;;AAEA,MAAMC,WAAW,GAAIC,gBAAD,IAAsB;AACtC,QAAMC,OAAO,GAAG,CAAC;AAAEC,IAAAA,SAAF;AAAa,OAAGC;AAAhB,GAAD,KAAkC;AAC9C,WAAOD,SAAS,gBAER,QAAC,cAAD;AAAA,6BACI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFQ,gBAQR,QAAC,gBAAD,OAAsBC;AAAtB;AAAA;AAAA;AAAA;AAAA,YARR,CAD8C,CAW9C;AACA;AAEH,GAdD;;AAeA,SAAOF,OAAP;AACH,CAjBD;;KAAMF,W;AAmBN,eAAeA,WAAf,C,CAEA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\r\n\r\nimport { SpinnerOverlay, SpinnerContainer } from './with-spinner.style';\r\n\r\nconst WithSpinner = (WrappedComponent) => {\r\n    const Spinner = ({ isLoading, ...otherProps }) => {\r\n        return isLoading ?\r\n            (\r\n                <SpinnerOverlay>\r\n                    <SpinnerContainer />\r\n                </SpinnerOverlay>\r\n            )\r\n            :\r\n            (\r\n                <WrappedComponent {...otherProps} />\r\n            )\r\n        //It's important to put {...otherProps} inside <WrappedComponent/>\r\n        //For Eg. CollectionPage component needs to use match.params so it needs otherProps\r\n\r\n    };\r\n    return Spinner;\r\n};\r\n\r\nexport default WithSpinner;\r\n\r\n//Purpose of WithSpinner HOC\r\n//-It takes a component as a parameter\r\n//1. If isLoading is TRUE, it will return spinner component which is loading screen\r\n//2. If isLoading is FALSE, it will return the component which this HOC took as its parameter\r\n"]},"metadata":{},"sourceType":"module"}